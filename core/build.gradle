apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Support
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibrary"
    implementation "com.android.support:support-v4:$rootProject.supportLibrary"
    implementation "com.android.support:design:$rootProject.supportLibrary"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibrary"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayout"

    //Room
    implementation "android.arch.persistence.room:runtime:$rootProject.roomDatabase"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomDatabase"
    implementation 'com.android.support:support-v4:28.0.0'
    kapt "android.arch.persistence.room:compiler:$rootProject.roomDatabase"

    //RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroid"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava"

    //For Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3"

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.25.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.25.3"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'

    //Gson
    implementation "com.google.code.gson:gson:$rootProject.gson"

    // Required for local unit tests
    testCompile 'junit:junit:4.12'

    testCompile "org.hamcrest:hamcrest-all:$rootProject.hamcrest"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.powerMockito"

    testCompile "org.mockito:mockito-core:$rootProject.mockito"
    androidTestCompile "org.mockito:mockito-android:$rootProject.mockito"

    // Required for instrumented tests
    androidTestCompile 'com.android.support:support-annotations:28.0.0'
    androidTestCompile "com.android.support.test:runner:$rootProject.testRunner"

    implementation "com.google.dagger:dagger:2.17"
    kapt "com.google.dagger:dagger-compiler:2.17"
    kapt "com.google.dagger:dagger-android-processor:2.17"
    implementation "com.google.dagger:dagger-android-support:2.17"

    //Espresso
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espresso"

    //Mock web server
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'


}
repositories {
    mavenCentral()
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
